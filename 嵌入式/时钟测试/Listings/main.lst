C51 COMPILER V9.60.7.0   MAIN                                                              12/15/2024 16:43:11 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*ds1302显示时间（通过串口调试助手）*/
   2          #include<reg52.h>
   3          typedef unsigned char uint8;
   4          typedef unsigned int  uint16;  
   5          sbit SDA=P3^5;  //数据  
   6          sbit SCK=P3^7; //时钟
   7          sbit RST=P3^4;  //DS1302复位(片选)
   8          sbit le=P1^0;
   9          uint8 time[7]={50,41,20,9,8,4,12};//秒分时日月周年10-08-15 23:59:50   7代表周日
  10          unsigned int poi[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  11          unsigned int seg[] = {0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xf8, 0x80, 0x90};
  12          #define DS1302_W_ADDR 0x80
  13          #define DS1302_R_ADDR 0x81
  14           
  15           
  16          void ds1302_reset()//令SCK=0；RST=1
  17          {
  18   1        RST=0;//停止数据传送
  19   1        SCK=0;//时钟总线清零
  20   1        RST=1;//数据操作
  21   1      }
  22           
  23          //写一个字节
  24          void ds1302_write_byte(uint8 dat)
  25          {
  26   1        uint8 i;
  27   1        
  28   1       for(i=0;i<8;i++)
  29   1       {
  30   2         SDA=dat & 0x01;
  31   2         SCK=1;
  32   2         SCK=0;
  33   2         dat>>=1;
  34   2       }
  35   1      }
  36           
  37          uint8 ds1302_read_byte()
  38          {
  39   1       uint8 i,dat=0;//用dat存储读到的数据
  40   1       for(i=0;i<8;i++)
  41   1       {
  42   2          
  43   2        dat>>=1;  
  44   2        if(SDA==1)
  45   2          dat=dat | 0x80;//因为从低位开始读
  46   2        SCK=1;
  47   2        SCK=0;  //由上面解释可以知道：我们首先应该判断  if(SDA==1)，然后进行SCK=1，SCK=0
  48   2       
  49   2       }
  50   1       return dat;
  51   1      }
  52           
  53          //清除写保护
  54          void ds1302_clear_WP()
C51 COMPILER V9.60.7.0   MAIN                                                              12/15/2024 16:43:11 PAGE 2   

  55          {
  56   1        ds1302_reset();
  57   1        RST=1;
  58   1        ds1302_write_byte(0x8E);//写入地址
  59   1        ds1302_write_byte(0x00);//写入数据
  60   1        //写完后
  61   1        SDA=0;
  62   1        RST=0;
  63   1        
  64   1      }
  65           
  66          //设置写保护
  67          void ds1302_set_WP()
  68          {
  69   1        ds1302_reset();
  70   1        RST=1;
  71   1        ds1302_write_byte(0x8E);//写入地址
  72   1        ds1302_write_byte(0x80);//写入数据
  73   1        //写完后
  74   1        SDA=0;
  75   1        RST=0;
  76   1        
  77   1      }
  78           
  79           
  80           
  81          //写入ds1302
  82          void ds1302_write(uint8 addr,uint8 dat)
  83          {
  84   1        ds1302_reset();
  85   1        RST=1;
  86   1        ds1302_write_byte(addr);//写入地址
  87   1        ds1302_write_byte(dat);//写入数据
  88   1        //写完后
  89   1        RST=0;
  90   1        SDA=0;
  91   1      }
  92           
  93          //从ds1302读数据
  94          uint8 ds1302_read(uint8 addr)
  95          {
  96   1        uint8 temp=0;//存储读出来的数据
  97   1        ds1302_reset();
  98   1        RST=1;
  99   1        ds1302_write_byte(addr);//写入地址
 100   1        temp=ds1302_read_byte();//写入数据
 101   1        //写完后
 102   1        RST=0;
 103   1        SDA=0;
 104   1        return temp;
 105   1      }
 106           
 107          void delay(uint16 n)
 108          { 
 109   1        while(n--);
 110   1      }
 111           
 112           
 113          /**
 114           * 设定时钟数据
 115           其中涉及二进制和BCD转换  因为ds1302存BCD ，但是机器只认识二进制
 116           例如：存入ds1302为50  0101 0000  那么我们写入的是ds1302_write（80）
C51 COMPILER V9.60.7.0   MAIN                                                              12/15/2024 16:43:11 PAGE 3   

 117          */
 118          void set_time(uint8 *timedata)
 119          {
 120   1        uint8 i;
 121   1        uint8 temp=0;
 122   1        for(i=0;i<7;i++)
 123   1        {
 124   2          temp=timedata[i]/10;
 125   2          timedata[i]=timedata[i]%10;
 126   2          timedata[i]=timedata[i]+temp*16;
 127   2        }
 128   1        ds1302_clear_WP();//对ds1302操作前先将wp位清零
 129   1        temp=DS1302_W_ADDR;//写入起始位置
 130   1        for(i=0;i<7;i++)
 131   1        {
 132   2          ds1302_write(temp,timedata[i]);
 133   2          temp+=2;
 134   2        }
 135   1        ds1302_set_WP();
 136   1       
 137   1      }
 138           
 139          /**
 140           * 读时钟数据（BCD格式）
 141          */
 142          void read_time(uint8 *timedata)
 143          {
 144   1         uint8 i,temp;
 145   1         temp=DS1302_R_ADDR;//读起始位置
 146   1         for(i=0;i<7;i++)
 147   1         {
 148   2           timedata[i]=ds1302_read(temp);
 149   2         temp+=2;
 150   2         }
 151   1      }
 152          /* UART初始化
 153           * 波特率：9600
 154          */
 155          void uart_init(void)
 156          {
 157   1        TMOD=0x21;
 158   1        SCON=0x50;
 159   1        
 160   1        TH1=0xFD;
 161   1        TL1=0xFD;
 162   1        
 163   1        TR1=1;  
 164   1      }
 165           
 166          /**
 167           * UART发送一字节
 168          */
 169          void UART_Send_Byte(uint8 dat)
 170          { 
 171   1        SBUF=dat;
 172   1        while(TI==0);
 173   1         TI=0;
 174   1      }
 175           
 176          /**
 177           * 将数据转换成ASC码并通过UART发送出去
 178          */
C51 COMPILER V9.60.7.0   MAIN                                                              12/15/2024 16:43:11 PAGE 4   

 179          void UART_Send_Dat(uint8 dat)  //注意是关于16取余
 180          {
 181   1         UART_Send_Byte(dat/16+'0');
 182   1         UART_Send_Byte(dat%16+'0');   
 183   1      }
 184          void display(int p,int num){
 185   1        P0=0xff;P0=poi[p];le=1;le=0;P0=seg[num];delay(100);
 186   1      }
 187          void main()
 188          {
 189   1           
 190   1       
 191   1        uart_init();
 192   1        set_time(&time);    //设定时间值
 193   1       
 194   1        while(1)
 195   1        {
 196   2       
 197   2          read_time(&time);   //秒分时日月周年
 198   2       
 199   2          UART_Send_Dat(time[2]);
 200   2          display(7,time[2]/10);
 201   2          display(6,time[2]%10);
 202   2          UART_Send_Byte(':');
 203   2          UART_Send_Dat(time[1]);
 204   2          display(4,time[1]/10);
 205   2          display(3,time[1]%10);
 206   2          UART_Send_Byte(':');
 207   2          UART_Send_Dat(time[0]);
 208   2          display(1,time[0]/10);
 209   2          display(0,time[0]%10);
 210   2          UART_Send_Byte('\r');
 211   2          UART_Send_Byte('\n');
 212   2       
 213   2          delay(10000);
 214   2        }
 215   1      }
 216           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    495    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     43       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
