/*
N 架飞机准备降落到某个只有一条跑道的机场。
其中第 i 架飞机在 Ti 时刻到达机场上空，到达时它的剩余油料还可以继续盘旋 Di 个单位时间，
即它最早可以于 Ti 时刻开始降落，最晚可以于 Ti + Di 时刻开始降落。降落过程需要 Li个单位时间。
一架飞机降落完毕时，另一架飞机可以立即在同一时刻开始降落，但是不能在前一架飞机完成降落前开始降落。
请你判断 N 架飞机是否可以全部安全降落
输入包含多组数据。
第一行包含一个整数 T，代表测试数据的组数。
对于每组数据，第一行包含一个整数 N。
以下 N 行，每行包含三个整数：Ti，Di 和 Li。
2
3
0 100 10
10 10 10
0 2 20
3
0 10 20
10 10 20
20 10 20
YES
NO
*/
//先降落当前最先到达且可盘旋时间最小的，时间加上
//排列一下所有飞机的到达时间
//再降落后一架，并判断可盘旋时间 是否 大于上一架飞机的降落时间-减去当前飞机的到达时间，
//如果可盘旋时间大于，那么继续往后降落，那么不能安全降落
#include <iostream>
#include <vector>
using namespace std;
int t, n, ti, di, li; // t组
int main()
{
    cin >> t;
    for (size_t i = 0; i < t; i++)
    {
        cin >> n;
        for (size_t i = 0; i < n; i++)
        {
            cin >> ti >> di >> li;
        }
    }
}